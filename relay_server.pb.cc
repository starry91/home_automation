// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: relay_server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "relay_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace py_server {
class DetailsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Details> {
} _Details_default_instance_;
class StateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<State> {
} _State_default_instance_;
class ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Response> {
} _Response_default_instance_;

namespace protobuf_relay_5fserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Details, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Details, room_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Details, appliance_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Details, appliance_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Details, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, value_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Details)},
  { 9, -1, sizeof(State)},
  { 15, -1, sizeof(Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Details_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Response_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "relay_server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Details_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _State_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Response_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Details_default_instance_.DefaultConstruct();
  _State_default_instance_.DefaultConstruct();
  _Response_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022relay_server.proto\022\tpy_server\"[\n\007Detai"
      "ls\022\021\n\troom_name\030\001 \001(\t\022\026\n\016appliance_type\030"
      "\002 \001(\t\022\026\n\016appliance_name\030\003 \001(\t\022\r\n\005state\030\004"
      " \001(\005\"\026\n\005State\022\r\n\005value\030\001 \001(\005\"\031\n\010Response"
      "\022\r\n\005value\030\001 \001(\0052z\n\013RelayServer\0223\n\tget_st"
      "ate\022\022.py_server.Details\032\020.py_server.Stat"
      "e\"\000\0226\n\tset_state\022\022.py_server.Details\032\023.p"
      "y_server.Response\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 307);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "relay_server.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_relay_5fserver_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Details::kRoomNameFieldNumber;
const int Details::kApplianceTypeFieldNumber;
const int Details::kApplianceNameFieldNumber;
const int Details::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Details::Details()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_relay_5fserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:py_server.Details)
}
Details::Details(const Details& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_name().size() > 0) {
    room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_name_);
  }
  appliance_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appliance_type().size() > 0) {
    appliance_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appliance_type_);
  }
  appliance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appliance_name().size() > 0) {
    appliance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appliance_name_);
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:py_server.Details)
}

void Details::SharedCtor() {
  room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appliance_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appliance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  _cached_size_ = 0;
}

Details::~Details() {
  // @@protoc_insertion_point(destructor:py_server.Details)
  SharedDtor();
}

void Details::SharedDtor() {
  room_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appliance_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appliance_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Details::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Details::descriptor() {
  protobuf_relay_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_relay_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Details& Details::default_instance() {
  protobuf_relay_5fserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

Details* Details::New(::google::protobuf::Arena* arena) const {
  Details* n = new Details;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Details::Clear() {
// @@protoc_insertion_point(message_clear_start:py_server.Details)
  room_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appliance_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appliance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
}

bool Details::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:py_server.Details)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string room_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_name().data(), this->room_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "py_server.Details.room_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appliance_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appliance_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appliance_type().data(), this->appliance_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "py_server.Details.appliance_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appliance_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appliance_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appliance_name().data(), this->appliance_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "py_server.Details.appliance_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:py_server.Details)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:py_server.Details)
  return false;
#undef DO_
}

void Details::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:py_server.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string room_name = 1;
  if (this->room_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_name().data(), this->room_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "py_server.Details.room_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->room_name(), output);
  }

  // string appliance_type = 2;
  if (this->appliance_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appliance_type().data(), this->appliance_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "py_server.Details.appliance_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appliance_type(), output);
  }

  // string appliance_name = 3;
  if (this->appliance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appliance_name().data(), this->appliance_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "py_server.Details.appliance_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appliance_name(), output);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:py_server.Details)
}

::google::protobuf::uint8* Details::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:py_server.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string room_name = 1;
  if (this->room_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_name().data(), this->room_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "py_server.Details.room_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->room_name(), target);
  }

  // string appliance_type = 2;
  if (this->appliance_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appliance_type().data(), this->appliance_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "py_server.Details.appliance_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appliance_type(), target);
  }

  // string appliance_name = 3;
  if (this->appliance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appliance_name().data(), this->appliance_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "py_server.Details.appliance_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appliance_name(), target);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:py_server.Details)
  return target;
}

size_t Details::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:py_server.Details)
  size_t total_size = 0;

  // string room_name = 1;
  if (this->room_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_name());
  }

  // string appliance_type = 2;
  if (this->appliance_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appliance_type());
  }

  // string appliance_name = 3;
  if (this->appliance_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appliance_name());
  }

  // int32 state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Details::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:py_server.Details)
  GOOGLE_DCHECK_NE(&from, this);
  const Details* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Details>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:py_server.Details)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:py_server.Details)
    MergeFrom(*source);
  }
}

void Details::MergeFrom(const Details& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:py_server.Details)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.room_name().size() > 0) {

    room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_name_);
  }
  if (from.appliance_type().size() > 0) {

    appliance_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appliance_type_);
  }
  if (from.appliance_name().size() > 0) {

    appliance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appliance_name_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void Details::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:py_server.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Details::CopyFrom(const Details& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:py_server.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Details::IsInitialized() const {
  return true;
}

void Details::Swap(Details* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Details::InternalSwap(Details* other) {
  room_name_.Swap(&other->room_name_);
  appliance_type_.Swap(&other->appliance_type_);
  appliance_name_.Swap(&other->appliance_name_);
  std::swap(state_, other->state_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Details::GetMetadata() const {
  protobuf_relay_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_relay_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Details

// string room_name = 1;
void Details::clear_room_name() {
  room_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Details::room_name() const {
  // @@protoc_insertion_point(field_get:py_server.Details.room_name)
  return room_name_.GetNoArena();
}
void Details::set_room_name(const ::std::string& value) {
  
  room_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:py_server.Details.room_name)
}
#if LANG_CXX11
void Details::set_room_name(::std::string&& value) {
  
  room_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:py_server.Details.room_name)
}
#endif
void Details::set_room_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  room_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:py_server.Details.room_name)
}
void Details::set_room_name(const char* value, size_t size) {
  
  room_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:py_server.Details.room_name)
}
::std::string* Details::mutable_room_name() {
  
  // @@protoc_insertion_point(field_mutable:py_server.Details.room_name)
  return room_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Details::release_room_name() {
  // @@protoc_insertion_point(field_release:py_server.Details.room_name)
  
  return room_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Details::set_allocated_room_name(::std::string* room_name) {
  if (room_name != NULL) {
    
  } else {
    
  }
  room_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_name);
  // @@protoc_insertion_point(field_set_allocated:py_server.Details.room_name)
}

// string appliance_type = 2;
void Details::clear_appliance_type() {
  appliance_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Details::appliance_type() const {
  // @@protoc_insertion_point(field_get:py_server.Details.appliance_type)
  return appliance_type_.GetNoArena();
}
void Details::set_appliance_type(const ::std::string& value) {
  
  appliance_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:py_server.Details.appliance_type)
}
#if LANG_CXX11
void Details::set_appliance_type(::std::string&& value) {
  
  appliance_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:py_server.Details.appliance_type)
}
#endif
void Details::set_appliance_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appliance_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:py_server.Details.appliance_type)
}
void Details::set_appliance_type(const char* value, size_t size) {
  
  appliance_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:py_server.Details.appliance_type)
}
::std::string* Details::mutable_appliance_type() {
  
  // @@protoc_insertion_point(field_mutable:py_server.Details.appliance_type)
  return appliance_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Details::release_appliance_type() {
  // @@protoc_insertion_point(field_release:py_server.Details.appliance_type)
  
  return appliance_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Details::set_allocated_appliance_type(::std::string* appliance_type) {
  if (appliance_type != NULL) {
    
  } else {
    
  }
  appliance_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appliance_type);
  // @@protoc_insertion_point(field_set_allocated:py_server.Details.appliance_type)
}

// string appliance_name = 3;
void Details::clear_appliance_name() {
  appliance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Details::appliance_name() const {
  // @@protoc_insertion_point(field_get:py_server.Details.appliance_name)
  return appliance_name_.GetNoArena();
}
void Details::set_appliance_name(const ::std::string& value) {
  
  appliance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:py_server.Details.appliance_name)
}
#if LANG_CXX11
void Details::set_appliance_name(::std::string&& value) {
  
  appliance_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:py_server.Details.appliance_name)
}
#endif
void Details::set_appliance_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appliance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:py_server.Details.appliance_name)
}
void Details::set_appliance_name(const char* value, size_t size) {
  
  appliance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:py_server.Details.appliance_name)
}
::std::string* Details::mutable_appliance_name() {
  
  // @@protoc_insertion_point(field_mutable:py_server.Details.appliance_name)
  return appliance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Details::release_appliance_name() {
  // @@protoc_insertion_point(field_release:py_server.Details.appliance_name)
  
  return appliance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Details::set_allocated_appliance_name(::std::string* appliance_name) {
  if (appliance_name != NULL) {
    
  } else {
    
  }
  appliance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appliance_name);
  // @@protoc_insertion_point(field_set_allocated:py_server.Details.appliance_name)
}

// int32 state = 4;
void Details::clear_state() {
  state_ = 0;
}
::google::protobuf::int32 Details::state() const {
  // @@protoc_insertion_point(field_get:py_server.Details.state)
  return state_;
}
void Details::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:py_server.Details.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int State::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

State::State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_relay_5fserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:py_server.State)
}
State::State(const State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:py_server.State)
}

void State::SharedCtor() {
  value_ = 0;
  _cached_size_ = 0;
}

State::~State() {
  // @@protoc_insertion_point(destructor:py_server.State)
  SharedDtor();
}

void State::SharedDtor() {
}

void State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* State::descriptor() {
  protobuf_relay_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_relay_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const State& State::default_instance() {
  protobuf_relay_5fserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

State* State::New(::google::protobuf::Arena* arena) const {
  State* n = new State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void State::Clear() {
// @@protoc_insertion_point(message_clear_start:py_server.State)
  value_ = 0;
}

bool State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:py_server.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:py_server.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:py_server.State)
  return false;
#undef DO_
}

void State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:py_server.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:py_server.State)
}

::google::protobuf::uint8* State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:py_server.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:py_server.State)
  return target;
}

size_t State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:py_server.State)
  size_t total_size = 0;

  // int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:py_server.State)
  GOOGLE_DCHECK_NE(&from, this);
  const State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:py_server.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:py_server.State)
    MergeFrom(*source);
  }
}

void State::MergeFrom(const State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:py_server.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:py_server.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:py_server.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool State::IsInitialized() const {
  return true;
}

void State::Swap(State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void State::InternalSwap(State* other) {
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  protobuf_relay_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_relay_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// State

// int32 value = 1;
void State::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 State::value() const {
  // @@protoc_insertion_point(field_get:py_server.State.value)
  return value_;
}
void State::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:py_server.State.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_relay_5fserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:py_server.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:py_server.Response)
}

void Response::SharedCtor() {
  value_ = 0;
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:py_server.Response)
  SharedDtor();
}

void Response::SharedDtor() {
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_relay_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_relay_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  protobuf_relay_5fserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:py_server.Response)
  value_ = 0;
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:py_server.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:py_server.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:py_server.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:py_server.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:py_server.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:py_server.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:py_server.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:py_server.Response)
  size_t total_size = 0;

  // int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:py_server.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:py_server.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:py_server.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:py_server.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:py_server.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:py_server.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_relay_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_relay_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// int32 value = 1;
void Response::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 Response::value() const {
  // @@protoc_insertion_point(field_get:py_server.Response.value)
  return value_;
}
void Response::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:py_server.Response.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace py_server

// @@protoc_insertion_point(global_scope)
